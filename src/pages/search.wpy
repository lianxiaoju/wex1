<template>
  <view class='search-page'>
    <view class="head">
      <view class="ipt">
        <image class="search" src="../images/search.png" />
        <input @input="getValue" @confirm="confirmFn" placeholder="全部海外视频" placeholder-style="color: rgba(255, 255, 255, 0.4)" value="{{value}}" />
        <image wx:if="{{value !== ''}}" class="remove" @tap="removeFn" src="../images/remove2.png" />
      </view>
      <text class="cancel" @tap="cancelFn">取消</text>
    </view>
    <view wx:if="{{searchVideoList.length <= 0}}" class="no-content">
      <view wx:if="{{searchHistory.length <= 0}}" class="img">
        <image src="../images/no-attention.png" />
        <text>暂无内容</text>
      </view>
      <view wx:if="{{searchHistory.length > 0}}" class="history">
        <text class="title">搜索历史</text>
        <view class="history-item" @tap="historyCon" data-content="{{item}}" wx:for="{{searchHistory}}" wx:key="{{index}}">
          <text>{{item}}</text>
          <image @tap="removeItem" data-index="{{index}}" src="../images/remove3.png" />
        </view>
        <text @tap="clearAll" class="clear">清空搜索历史</text>
      </view>
    </view>
    <view class="search-list" wx:if="{{searchVideoList.length > 0}}">
      <view class="search-item" wx:for="{{searchVideoList}}" wx:key="{{index}}">
        <view class="picture"><image src="{{item.thumbFileKeyUrl}}" /></view>
        <view class="content">
          <view class="title ellipsis">{{item.zhName}}</view>
          <view @tap="chooseFn" data-index="{{index}}" class="choose {{item.isFlag ? 'addBg' : ''}}">
            <view wx:if="{{!item.isFlag}}">选用</view>
            <view wx:if="{{item.isFlag}}"><image src="../images/love.png" /></view>
          </view>
        </view>
      </view>
    </view>
    <loading/>
    <toast/>
    <dialog/>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import Service from '../common/services';
  import Utils from '../common/util'
  import Util from '@hzct/js-utils';
  import UILoading from '../components/ui-loading';
  import UIToast from '../components/ui-toast';
  import UIDialog from '../components/ui-dialog';
  export default class Search extends wepy.page {
    config = {
      enablePullDownRefresh: false
    }
    components = {
      'loading': UILoading,
      'toast': UIToast,
      'dialog': UIDialog
    }
    data = {
      value: '',
      searchVideoList: [],
      page: 1,
      sid: '',
      searchHistory: [],
      sidArr: [],
      totalCount: 0
    };
    onLoad(option, data) {
      this.sid = option.sid
      this.sidArr = data.preload.sidArr
      this.$apply()
      const searchHistory = Util.$$storage.getItem('searchHistory')
      if (searchHistory) {
        this.searchHistory = searchHistory
      }
    }
    methods = {
      getValue(e) {
        this.value = e.detail.value
        this.$apply()
      },
      historyCon(e) {
        const content = e.currentTarget.dataset.content
        this.value = content;
        this.page = 1;
        this.$apply()
        this._getSearchVideoList()
      },
      confirmFn() {
        let arr = Util.$$storage.getItem('searchHistory') || [];
        arr.push(this.value);
        Util.$$storage.setItem('searchHistory', arr)
        this._getSearchVideoList()
      },
      removeFn() {
        this.value = '';
        this.searchVideoList = []
        this.searchHistory = Util.$$storage.getItem('searchHistory')
        this.$apply()
      },
      cancelFn() {
        this.$back();
      },
      removeItem(e) {
        const ind = e.currentTarget.dataset.index;
        this.searchHistory.splice(ind, 1)
        this.$apply()
        Util.$$storage.setItem('searchHistory', this.searchHistory)
      },
      clearAll() {
        Util.$$storage.removeItem('searchHistory')
        this.searchHistory = Util.$$storage.getItem('searchHistory')
        this.$apply()
      },
      chooseFn(e) {
        const ind = e.currentTarget.dataset.index
        this.searchVideoList.forEach((item, index) => {
          if (ind === index) {
            if (!item.isFlag) {
              Service.$album.albumAddVideo({
                sid: this.sid,
                video_sid: item.sid
              }).then(() => {
                item.isFlag = true;
                this.$apply()
                this.$invoke('toast', 'show', {
                  content: '选用成功',
                  position: 'center'
                });
              })
            } else {
              Service.$album.albumRemoveVideo({
                sid: this.sid,
                video_sid: item.sid
              }).then(() => {
                item.isFlag = false;
                this.$apply()
                this.$invoke('toast', 'show', {
                  content: '取消选用',
                  position: 'center'
                });
              })
            }
          }
        })
      }
    };
    onReachBottom() {
      if (this.totalCount <= this.page * 10) {
        return;
      }
      this.page++;
      this.$apply();
      this._getSearchVideoList();
    }
    _getSearchVideoList() {
      return Service.$info.searchVideo({
        keyword: this.value,
        page: this.page,
        limit: 10
      }).then(res => {
        this.totalCount = res.data.totalCount;
        if(!res.data.items || res.data.items.length === 0) {
          this.searchVideoList = [];
          this.searchHistory = []
          this.$apply()
          return;
        }
        this._getUrl(res.data.items).then(res => {
          if (this.page === 1) {
            this.searchVideoList = res;
          } else {
            this.searchVideoList = this.searchVideoList.concat(res);
          }
          this.$apply();
          return Promise.resolve(res);
        })
      })
    }
    _getUrl(arr) {
      const sidArr = this.sidArr
      const formatData = arr.map((item, index) => {
        Utils.$file.getUrl({
          sid: item.thumbBucketSid,
          fileKey: item.thumbFileKey
        }).then(url => {
          item.thumbFileKeyUrl = url;
          this.$apply()
        })
        if(sidArr.indexOf(item.sid) > -1) {
          item.isFlag = true;
        } else {
          item.isFlag = false;
        }
        return item;
      })
      return Promise.resolve(formatData);
    }
  }
</script>

<style lang='less'>
.search-page {
  padding: 0 32rpx;
  .head {
    display: flex;
    justify-content: space-between;
    align-items: center;
    .ipt {
      width: 560rpx;
      height: 64rpx;
      background: #17202c;
      border-radius: 4rpx;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 24rpx;
      .search {
        width: 44rpx;
        height: 44rpx;
      }
      input {
        flex: 1;
        font-size: 26rpx;
        color: rgba(255, 255, 255, .4);
        padding-left: 16rpx;
      }
      .remove {
        width: 28rpx;
        height: 28rpx;
      }
    }
    .cancel {
      font-size: 26rpx;
      color: #eb445a;
    }
  }
  .no-content {
    .img {
      display: flex;
      margin-top: 160rpx;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      image {
        width: 360rpx;
        height: 360rpx;
      }
      text {
        margin-top: 32rpx;
        font-size: 26rpx;
        color: #878d92;
      }
    }
    .history {
      display: flex;
      flex-direction: column;
      font-size: 30rpx;
      padding: 52rpx 8rpx 0;
      .title {
        color: #6f727d;
      }
      .history-item {
        padding: 26rpx 0;
        color: #b3b3c1;
        display: flex;
        justify-content: space-between;
        align-items: center;
        image {
          width: 22rpx;
          height: 22rpx;
        }
      }
      .clear {
        color: #878d92;
        font-size: 26rpx;
        text-align: center;
      }
    }
  }
  .search-list {
    padding: 6rpx 0;
    .search-item {
      display: flex;
      margin: 26rpx 0;
      .picture {
        width: 256rpx;
        height: 144rpx;
        image {
          width: 100%;
          height: 100%;
        }
      }
      .content {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        margin-left: 20rpx;
        .title {
          color: #b3b3c1;
          font-size: 30rpx;
        }
        .choose {
          width: 104rpx;
          height: 48rpx;
          line-height: 48rpx;
          text-align: center;
          margin-left: 306rpx;
          background: #eb445a;
          color: #ffffff;
          font-size: 26rpx;
          border-radius: 8rpx;
          margin-top: 12rpx;
          image {
            width: 24rpx;
            height: 16rpx;
          }
        }
        .addBg {
          background: rgba(255, 255, 255, .4);
        }
      }
    }
  }
}
.ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}
</style>